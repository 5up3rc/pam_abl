PAM_ABL(8)
=========
:man source: GNU
:man manual: Linux-PAM Manual
:author: Chris Tasma

NAME
----

pam_abl - PAM Auto Blacklist Module

SYNOPSIS
--------

Provides auto blacklisting of hosts and users responsible for repeated
failed authentication attempts. Generally configured so that blacklisted
users still see normal login prompts but are guaranteed to fail to
authenticate.

DESCRIPTION
-----------

Brute force password discovery attacks involve repeated attempts to
authenticate against a service using a dictionary of common passwords. While it
is desirable to enforce strong passwords for users this is not always possible
and in cases where a weak password has been used brute force attacks can be
effective.

The pam_abl module monitors failed authentication attempts and automatically
blacklists those hosts (and accounts) that are responsible for large numbers of
failed attempts. Once a host is blacklisted it is guaranteed to fail
authentication even if the correct credentials are provided.

Blacklisting is triggered when the number of failed authentication attempts in
a particular period of time exceeds a predefined limit. Hosts which stop
attempting to authenticate will, after a period of time, be un-blacklisted.

Commands can be specified which will be run when a host or user switches state
from being blocked to clear or clear to blocked.  See below or the
pam_abl.conf(5) manpage for the details.

OPTIONS
-------

[frame="none",cols="s,25d,50d",options="header"]
|=========================================================================
|'Name'|'Arguments'|'Description'           
|debug|None|Enable debug output to syslog. 

|config|Path to the configuration file.|
The configuration file contains all non call specific arguments (options not specific to a specific usage). Please see the pam_abl.conf manpage for more information regarding this file. 

|check_user, check_host, check_both|Check if the given the user/host is blocked|
Check if the current user (when using check_user or check_both) or the current host (when using check_host or check_both) is blocked. PAM_AUTH_ERR will be returned if the user/host is blocked. check_both is the same as specifying both check_user and check_host. You can use this option to decide if only the user or host needs to be checked.

|log_user, log_host, log_both|Add a failed attempt to the list for that user/host|
Add an authentication failure to the current user (if log_user or log_both is used) or host (if log_host or log_both is used). If only log_user/log_host is given, the reason will only be based on the user/host database. To give an example: the current host is blocked, the user isn't and only log_user given. The logged reason will only take into account that the current user is not blocked, resulting in AUTH_FAILED. If in this case log_both was given, the resulting reason would have been HOST_BLOCKED.

|=========================================================================

USAGE
-----

Typically pam_abl.so with as action check_both is added to the top of the PAM service file. 
And pam_abl.so with as actiuon log_both is normally added just before a pam_deny.so
See the examples section for a working example.

EXAMPLES
--------

A real simple service file could look like this:
-------------------------------------
auth required pam_env.so

auth [default=ignore] pam_exec.so quiet /usr/bin/logger starting pam-abl check 
auth [success=ok default=4] pam_abl.so check_both config=/etc/security/pam_abl.conf debug
# Password
auth [default=ignore] pam_exec.so quiet /usr/bin/logger starting password check
auth [success=ok ignore=ignore default=2] pam_unix.so try_first_pass
auth [default=ignore] pam_exec.so quiet /usr/bin/logger auth success
auth [default=3] pam_permit.so
# default deny action
auth [default=ignore] pam_exec.so quiet /usr/bin/logger default deny action
auth required pam_abl.so log_both config=/etc/security/pam_abl.conf debug
auth required pam_deny.so

account required pam_unix.so
session required pam_unix.so
password required pam_unix.so
-------------------------------------
The pam_exec.so sections are just there for debugging reasons. 
First the config checks if the current user or host is already blocked, if so it automatically jumps to the "default deny action" section.
If the user or host was not blocked already, we evaluate the "Password" section and use pam_unix.so to actually check the given password. If the password is correct we evalute "pam_permit.so", given an incorrect password we jump to the "default deny action" section.

SEE ALSO
--------

pam_abl.conf(5), pam_abl(1)

AUTHORS
-------

Lode Mertens <pam-abl@danta.be>

Andy Armstrong <andy@hexten.net>

Chris Tasma <pam-abl@deksai.com>
