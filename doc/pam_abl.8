'\" t
.\"     Title: pam_abl
.\"    Author: Chris Tasma
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 05/05/2013
.\"    Manual: Linux-PAM Manual
.\"    Source: GNU
.\"  Language: English
.\"
.TH "PAM_ABL" "8" "05/05/2013" "GNU" "Linux\-PAM Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
pam_abl \- PAM Auto Blacklist Module
.SH "SYNOPSIS"
.sp
Provides auto blacklisting of hosts and users responsible for repeated failed authentication attempts\&. Generally configured so that blacklisted users still see normal login prompts but are guaranteed to fail to authenticate\&.
.SH "DESCRIPTION"
.sp
Brute force password discovery attacks involve repeated attempts to authenticate against a service using a dictionary of common passwords\&. While it is desirable to enforce strong passwords for users this is not always possible and in cases where a weak password has been used brute force attacks can be effective\&.
.sp
The pam_abl module monitors failed authentication attempts and automatically blacklists those hosts (and accounts) that are responsible for large numbers of failed attempts\&. Once a host is blacklisted it is guaranteed to fail authentication even if the correct credentials are provided\&.
.sp
Blacklisting is triggered when the number of failed authentication attempts in a particular period of time exceeds a predefined limit\&. Hosts which stop attempting to authenticate will, after a period of time, be un\-blacklisted\&.
.sp
Commands can be specified which will be run when a host or user switches state from being blocked to clear or clear to blocked\&. See below or the pam_abl\&.conf(5) manpage for the details\&.
.SH "OPTIONS"
.TS
tab(:);
ltB ltB ltB.
T{
\fIName\fR
T}:T{
\fIArguments\fR
T}:T{
\fIDescription\fR
T}
.T&
lt lt lt
lt lt lt
lt lt lt
lt lt lt.
T{
.sp
\fBdebug\fR
T}:T{
.sp
None
T}:T{
.sp
Enable debug output to syslog\&.
T}
T{
.sp
\fBconfig\fR
T}:T{
.sp
Path to the configuration file\&.
T}:T{
.sp
The configuration file contains all non call specific arguments (options not specific to a specific usage)\&. Please see the pam_abl\&.conf manpage for more information regarding this file\&.
T}
T{
.sp
\fBcheck_user, check_host, check_both\fR
T}:T{
.sp
Check if the given the user/host is blocked
T}:T{
.sp
Check if the current user (when using check_user or check_both) or the current host (when using check_host or check_both) is blocked\&. PAM_AUTH_ERR will be returned if the user/host is blocked\&. check_both is the same as specifying both check_user and check_host\&. You can use this option to decide if only the user or host needs to be checked\&.
T}
T{
.sp
\fBlog_user, log_host, log_both\fR
T}:T{
.sp
Add a failed attempt to the list for that user/host
T}:T{
.sp
Add an authentication failure to the current user (if log_user or log_both is used) or host (if log_host or log_both is used)\&. If only log_user/log_host is given, the reason will only be based on the user/host database\&. To give an example: the current host is blocked, the user isn\(cqt and only log_user given\&. The logged reason will only take into account that the current user is not blocked, resulting in AUTH_FAILED\&. If in this case log_both was given, the resulting reason would have been HOST_BLOCKED\&.
T}
.TE
.sp 1
.SH "USAGE"
.sp
Typically pam_abl\&.so with as action check_both is added to the top of the PAM service file\&. And pam_abl\&.so with as actiuon log_both is normally added just before a pam_deny\&.so See the examples section for a working example\&.
.SH "EXAMPLES"
.sp
A real simple service file could look like this:
.sp
.if n \{\
.RS 4
.\}
.nf
auth required pam_env\&.so

auth [default=ignore] pam_exec\&.so quiet /usr/bin/logger starting pam\-abl check
auth [success=ok default=4] pam_abl\&.so check_both config=/etc/security/pam_abl\&.conf debug
# Password
auth [default=ignore] pam_exec\&.so quiet /usr/bin/logger starting password check
auth [success=ok ignore=ignore default=2] pam_unix\&.so try_first_pass
auth [default=ignore] pam_exec\&.so quiet /usr/bin/logger auth success
auth [default=3] pam_permit\&.so
# default deny action
auth [default=ignore] pam_exec\&.so quiet /usr/bin/logger default deny action
auth required pam_abl\&.so log_both config=/etc/security/pam_abl\&.conf debug
auth required pam_deny\&.so

account required pam_unix\&.so
session required pam_unix\&.so
password required pam_unix\&.so
.fi
.if n \{\
.RE
.\}
.sp
The pam_exec\&.so sections are just there for debugging reasons\&. First the config checks if the current user or host is already blocked, if so it automatically jumps to the "default deny action" section\&. If the user or host was not blocked already, we evaluate the "Password" section and use pam_unix\&.so to actually check the given password\&. If the password is correct we evalute "pam_permit\&.so", given an incorrect password we jump to the "default deny action" section\&.
.SH "SEE ALSO"
.sp
pam_abl\&.conf(5), pam_abl(1)
.SH "AUTHORS"
.sp
Lode Mertens <pam\-abl@danta\&.be>
.sp
Andy Armstrong <andy@hexten\&.net>
.sp
Chris Tasma <pam\-abl@deksai\&.com>
.SH "AUTHOR"
.PP
\fBChris Tasma\fR
.RS 4
Author.
.RE
